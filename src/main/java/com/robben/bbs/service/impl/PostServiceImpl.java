package com.robben.bbs.service.impl;import com.robben.bbs.mapper.PostMapper;import com.robben.bbs.pojo.Post;import com.robben.bbs.service.ActiveService;import com.robben.bbs.service.ImageService;import com.robben.bbs.service.PostCommentService;import com.robben.bbs.service.PostService;import com.robben.bbs.utilities.UniqueId;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.IOException;import java.util.List;@Servicepublic class PostServiceImpl implements PostService {    private PostMapper postMapper;    private PostCommentService postCommentService;    private ActiveService activeService;    @Autowired    public PostServiceImpl(PostMapper postMapper,                           PostCommentService postCommentService,                           ImageService imageService, ActiveService activeService){        this.postMapper=postMapper;        this.postCommentService=postCommentService;        this.activeService=activeService;    }    @Override    public List getTopic() {        return postMapper.getTopic();    }    @Override    public List getAllPosts() {        return postMapper.getAllPosts();    }    @Override    public Post getPostByPostId(Long postId) {        return postMapper.getPostByPostId(postId);    }    @Override    public Long savePost(Long posterId,                            String content, String title, String topic){        //以时间戳来做postId        Long postId=UniqueId.getUniquePostId();        activeService.saveActive(posterId,postId.toString(),"添加帖子");        postMapper.savePost(postId,posterId, content, title, topic);        return postId;    }    @Override    public Integer updatePost(Long postId,                              String topic,String title,String content,                              Integer readingTimes){        return postMapper.updatePost(postId,topic,title,content,                readingTimes);    }    @Override    public Integer deletePostById(Long postId) {        postCommentService.deletePostCommentByPostId(postId);        return postMapper.deletePostById(postId);    }}