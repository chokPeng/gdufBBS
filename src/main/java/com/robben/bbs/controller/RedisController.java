package com.robben.bbs.controller;import com.robben.bbs.service.RedisService;import com.robben.bbs.utilities.ResultInfo;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.redis.core.RedisTemplate;import org.springframework.web.bind.annotation.*;@RestControllerpublic class RedisController {    //RedisHttpSessionConfiguration    RedisTemplate<String,Object> redisTemplate;    private RedisService redisService;    @Autowired    public RedisController(RedisTemplate redisTemplate,RedisService redisService){        this.redisTemplate=redisTemplate;        this.redisService=redisService;    }    @GetMapping("/onlineUser")    public ResultInfo getOnlineUser(){        return ResultInfo.success(redisService.getOnlineUser());    }    @GetMapping("/isOnline")    public ResultInfo judgeUserOnline(Long userId){        return ResultInfo.success(redisService.isUserOnline(userId));    }    @DeleteMapping("/signout")    public ResultInfo signout(Long userId){        return ResultInfo.success(redisService.deleteOnlineUser(userId));    }    @PostMapping("/postLike")    public ResultInfo savePostLike(Long postId,Long userId){        return ResultInfo.success(redisService.savePostLike(postId, userId));    }    @DeleteMapping("/postLike")    public ResultInfo deletePostLike(Long postId,Long userId){        return ResultInfo.success(redisService.deletePostLike(postId, userId));    }    @GetMapping("/squareLike")    public ResultInfo getSquareLike(Long squareId){        return  ResultInfo.success(redisService.getSquareLike(squareId));    }    @PostMapping("/squareLike")    public ResultInfo saveSquareLike(Long squareId,Long userId){        return ResultInfo.success(redisService.saveSquareLike(squareId, userId));    }    @DeleteMapping("/squareLike")    public ResultInfo deleteSquareLike(Long squareId,Long userId){        return ResultInfo.success(redisService.deleteSquareLike(squareId,userId));    }    @GetMapping("/postLike")    public ResultInfo getPostLike(Long postId){        return  ResultInfo.success(redisService.getPostLike(postId));    }    @GetMapping("/isUserLike")    public ResultInfo isUserLikePost(Long id,Long userId){        return ResultInfo.success(redisService.isUserLike(id, userId));    }}