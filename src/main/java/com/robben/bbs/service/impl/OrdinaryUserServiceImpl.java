package com.robben.bbs.service.impl;import com.robben.bbs.mapper.OrdinaryUserMapper;import com.robben.bbs.pojo.OrdinaryUser;import com.robben.bbs.service.OrdinaryUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import org.springframework.security.crypto.password.PasswordEncoder;import org.springframework.stereotype.Service;import java.util.HashMap;@Servicepublic class OrdinaryUserServiceImpl implements OrdinaryUserService {    private final OrdinaryUserMapper ordinaryUserMapper;    @Autowired    public OrdinaryUserServiceImpl(OrdinaryUserMapper ordinaryUserMapper){        this.ordinaryUserMapper=ordinaryUserMapper;    }    public OrdinaryUser queryByUsername(String username){        return ordinaryUserMapper.queryByUsername(username);    }    public Integer register(OrdinaryUser user){        user.setPassword(new BCryptPasswordEncoder().encode(user.getPassword()));        //加密明文密码        return ordinaryUserMapper.register(user);    }    public HashMap getUserInfoById(Integer id){        return  ordinaryUserMapper.getUserById(id);    }    @Override    public HashMap getUserIdAndAvatarByUsername(String username) {        return ordinaryUserMapper.getUserIdAndAvatarByUsername(username);    }}