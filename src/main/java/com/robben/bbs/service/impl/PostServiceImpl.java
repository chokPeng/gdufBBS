package com.robben.bbs.service.impl;import com.robben.bbs.mapper.PostMapper;import com.robben.bbs.pojo.Post;import com.robben.bbs.service.ImageService;import com.robben.bbs.service.PostCommentService;import com.robben.bbs.service.PostService;import com.robben.bbs.utilities.UniqueId;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.IOException;import java.util.List;@Servicepublic class PostServiceImpl implements PostService {    @Autowired    PostMapper postMapper;    @Autowired    PostCommentService postCommentService;    @Autowired    ImageService imageService;    final String basicPathName="/Users/pengchunkao/gdufBBSImage/";    @Override    public List getAllPosts() {        return postMapper.getAllPosts();    }    @Override    public Post getPostByPostId(Long postId) {        return postMapper.getPostByPostId(postId);    }    @Override    public Integer savePost(MultipartFile[] pictures, Integer posterId,                            String content, String tittle, String topic) throws IOException {        //以时间戳来做postId        Long postId=UniqueId.getUniquePostId();        if(pictures!=null) {            imageService.saveImage(pictures,postId,basicPathName);        }        return  postMapper.savePost(postId,posterId, content, tittle, topic);    }    @Override    public Integer updatePost(MultipartFile[] multipartFiles,Long postId,                              String topic,String tittle,String content,                              Integer readingTimes) throws IOException {        //删除旧与post相关的image        imageService.deleteImageByPostId(postId,basicPathName);        if(multipartFiles!=null){            imageService.saveImage(multipartFiles,postId,basicPathName);        }        return postMapper.updatePost(postId,topic,tittle,content,                readingTimes);    }    @Override    public Integer deletePostById(Long postId) {        imageService.deleteImageByPostId(postId,basicPathName);        postCommentService.deletePostCommentByPostId(postId);        return postMapper.deletePostById(postId);    }}