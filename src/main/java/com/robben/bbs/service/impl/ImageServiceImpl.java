package com.robben.bbs.service.impl;import com.robben.bbs.mapper.ImageMapper;import com.robben.bbs.pojo.Image;import com.robben.bbs.service.ImageService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.File;import java.io.IOException;import java.util.ArrayList;import java.util.List;@Servicepublic class ImageServiceImpl implements ImageService {    @Autowired    ImageMapper imageMapper;    /**     * 往磁盘和数据库存入image     * @param filesToSave     * @param postId     * @return     * @throws IOException     */    @Override    public Integer saveImage(MultipartFile[] filesToSave, Long postId, String basicPathName) throws IOException {        ArrayList<Image> imageArrayList = new ArrayList<>();        for (int i = 0; i < filesToSave.length; i++) {            Image imageToSave=new Image();            String location=                    postId+"_"+i+"."+filesToSave[i].getContentType().substring(6);            imageToSave.setPostId(postId);            imageToSave.setLocation(location);            //图片存储命名：poster_当前i的值+文件类型            File file = new File(basicPathName+location);            filesToSave[i].transferTo(file);            imageArrayList.add(imageToSave);        }        //插入图片信息到数据库        return imageMapper.saveImages(imageArrayList);    }    @Override    public Integer deleteImageByPostId(Long postId,String basicPathName) {        List<String> imageList=imageMapper.getImageLocationByPostId(postId);        if(imageList.size()!=0){            for(String  imageName: imageList){                File file=new File(basicPathName+imageName);                file.delete();            }            imageMapper.deleteImageByPostId(postId);        }        return imageMapper.deleteImageByPostId(postId);    }    @Override    public List<Image> getImageByPostId(Long postId) {        return imageMapper.getImageByPostId(postId);    }}