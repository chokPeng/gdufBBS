package com.robben.bbs.service.impl;import com.robben.bbs.mapper.ConfessionWallMapper;import com.robben.bbs.pojo.ConfessionWall;import com.robben.bbs.service.ConfessionWallCommentService;import com.robben.bbs.service.ConfessionWallService;import com.robben.bbs.service.ImageService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.File;import java.io.IOException;import java.util.List;@Servicepublic class ConfessionWallServiceImpl implements ConfessionWallService {    private final ImageService imageService;    private final ConfessionWallMapper confessionWallMapper;    private final ConfessionWallCommentService confessionWallCommentService;    @Autowired    public ConfessionWallServiceImpl(ConfessionWallMapper confessionWallMapper,ImageService imageService,                                     ConfessionWallCommentService confessionWallCommentService){        this.confessionWallMapper=confessionWallMapper;        this.confessionWallCommentService=confessionWallCommentService;        this.imageService=imageService;    }    @Override    public List<ConfessionWall> getAllConfessionWall() {        return confessionWallMapper.getAllConfessionWall();    }    @Override    public ConfessionWall getConfessionWallById(Integer id) {        return confessionWallMapper.getConfessionWallById(id);    }    @Override    public Integer saveConfessionWall(Integer posterId,String content,                                      MultipartFile[] pictures)            throws IOException {        ConfessionWall confessionWall1 =                confessionWallMapper.getConfessionWallByPosterId(posterId);        //如果该用户之前已经发布过表白墙,则先删除之前的表白墙和图片        //不直接调用deleteConfessionWallById(Integer id)的        //原因是deleteConfessionWallById(Integer id)会多查询一次数据库        if (confessionWall1 != null) {            imageService.deleteImageByConfessionWallId(confessionWall1.getId());            confessionWallMapper.deleteConfessionWallById(confessionWall1.getId());            /*** 与该表白墙相关的评论暂不删除，因为评论可能包含图片，这样太费时***/        }        if(pictures!=null) {            imageService.saveConfessionWallImage(pictures,posterId);        }        return confessionWallMapper.saveConfessionWall(posterId,content,                posterId);    }    /**     * 删除表白墙和表白墙图片     * @param id     * @return     */    @Override    public Integer deleteConfessionWallById(Integer id){        //删除该表白墙的图片        deleteConfessionWallPicturesByWallId(id);        //删除表白墙评论        confessionWallCommentService.deleteConfessionWallCommentByWallId(id);        return confessionWallMapper.deleteConfessionWallById(id);    }    @Override    public Integer updateConfessionWall(ConfessionWall confessionWall){        return confessionWallMapper.updateConfessionWall(confessionWall);    }    public void deleteConfessionWallPicturesByWallId(Integer confessionWallId){        imageService.deleteImageByConfessionWallId(confessionWallId);    }    @Override    public Integer saveConfessionWallLike(Integer id, Integer userId) {        return confessionWallMapper.saveConfessionWallLike(id,userId);    }}