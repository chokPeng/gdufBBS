package com.robben.bbs.service.impl;import com.robben.bbs.mapper.OrdinaryUserMapper;import com.robben.bbs.mapper.PrivateMessageMapper;import com.robben.bbs.pojo.PrivateMessage;import com.robben.bbs.service.PrivateMessageService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.util.HashMap;import java.util.HashSet;import java.util.List;@Servicepublic class PrivateMessageServiceImpl implements PrivateMessageService {    private final PrivateMessageMapper privateMessageMapper;    private final OrdinaryUserMapper ordinaryUserMapper;    @Autowired    public PrivateMessageServiceImpl(PrivateMessageMapper privateMessageMapper,OrdinaryUserMapper ordinaryUserMapper){        this.ordinaryUserMapper=ordinaryUserMapper;        this.privateMessageMapper=privateMessageMapper;    }    @Override    public Integer savePrivateMessage(Long senderId, String content, Long receiverId) {        return privateMessageMapper.savePrivateMessage(senderId, content, receiverId);    }    @Override    public List<PrivateMessage> getAllPrivateMessage(Long userId) {        return privateMessageMapper.getAllPrivateMessage(userId);    }    @Override    public HashMap getPrivateMessage(PrivateMessage privateMessage) {        List<PrivateMessage> privateMessageList=privateMessageMapper.getPrivateMessage(privateMessage);        String avatar=ordinaryUserMapper.getUserAvatar(privateMessage.getReceiverId());        HashMap<String,Object> result=new HashMap<>();        result.put("privateMessageList",privateMessageList);        result.put("avatar",avatar);        return  result;    }}