<?xml version="1.0" encoding="UTF-8" ?><!DOCTYPE mapper        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="com.robben.bbs.mapper.PrivateMessageMapper">    <resultMap id="privateMessage" type="java.util.HashMap">        <id property="id" column="id" javaType="java.lang.Integer"></id>        <result property="senderId" column="senderid" javaType="java.lang.Long"></result>        <result property="receiverId" column="receiverId" javaType="java.lang.Long"></result>        <result property="content" column="content" javaType="java.lang.String"></result>        <result property="sendingTime" column="sendingtime" javaType="java.sql.Timestamp"></result>    </resultMap>    <resultMap id="allPrivateMessage" type="java.util.HashMap">        <association property="oppositeUser" column="oppositeUserId" javaType="java.util.HashMap"                     select="com.robben.bbs.mapper.OrdinaryUserMapper.getUserById">        </association>        <collection property="privateMessageList" column="{receiverId=oppositeUserId,senderId=userId}"                    select="com.robben.bbs.mapper.PrivateMessageMapper.getPrivateMessage">        </collection>    </resultMap>    <insert id="savePrivateMessage">        insert into PrivateMessage(senderId,content,receiverId)        values(#{senderId},#{content},#{receiverId})    </insert>    <select id="getAllPrivateMessage" resultMap="allPrivateMessage">        SELECT distinct senderId as oppositeUserId,#{userId} as userId FROM privateMessage where receiverId=#{userId} union SELECT distinct receiverId        as oppositeUserId,#{userId} as userId FROM privateMessage where senderId=#{userId}    </select>    <select id="getPrivateMessage" resultType="com.robben.bbs.pojo.PrivateMessage">        select * from PrivateMessage where (senderId=#{senderId} and receiverId=#{receiverId})        or (senderId=#{receiverId} and receiverId=#{senderId}) order by sendingTime ASC    </select></mapper>